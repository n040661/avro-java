/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.sivaji.entity;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Employee_Record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Employee_Record\",\"namespace\":\"com.sivaji.entity\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"joining_date\",\"type\":\"string\"},{\"name\":\"role\",\"type\":\"string\"},{\"name\":\"dept\",\"type\":[\"null\",\"string\"]},{\"name\":\"salary\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence joining_date;
  @Deprecated public java.lang.CharSequence role;
  @Deprecated public java.lang.CharSequence dept;
  @Deprecated public float salary;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Employee_Record() {}

  /**
   * All-args constructor.
   */
  public Employee_Record(java.lang.CharSequence name, java.lang.CharSequence joining_date, java.lang.CharSequence role, java.lang.CharSequence dept, java.lang.Float salary) {
    this.name = name;
    this.joining_date = joining_date;
    this.role = role;
    this.dept = dept;
    this.salary = salary;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return joining_date;
    case 2: return role;
    case 3: return dept;
    case 4: return salary;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: joining_date = (java.lang.CharSequence)value$; break;
    case 2: role = (java.lang.CharSequence)value$; break;
    case 3: dept = (java.lang.CharSequence)value$; break;
    case 4: salary = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'joining_date' field.
   */
  public java.lang.CharSequence getJoiningDate() {
    return joining_date;
  }

  /**
   * Sets the value of the 'joining_date' field.
   * @param value the value to set.
   */
  public void setJoiningDate(java.lang.CharSequence value) {
    this.joining_date = value;
  }

  /**
   * Gets the value of the 'role' field.
   */
  public java.lang.CharSequence getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.lang.CharSequence value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'dept' field.
   */
  public java.lang.CharSequence getDept() {
    return dept;
  }

  /**
   * Sets the value of the 'dept' field.
   * @param value the value to set.
   */
  public void setDept(java.lang.CharSequence value) {
    this.dept = value;
  }

  /**
   * Gets the value of the 'salary' field.
   */
  public java.lang.Float getSalary() {
    return salary;
  }

  /**
   * Sets the value of the 'salary' field.
   * @param value the value to set.
   */
  public void setSalary(java.lang.Float value) {
    this.salary = value;
  }

  /** Creates a new Employee_Record RecordBuilder */
  public static com.sivaji.entity.Employee_Record.Builder newBuilder() {
    return new com.sivaji.entity.Employee_Record.Builder();
  }
  
  /** Creates a new Employee_Record RecordBuilder by copying an existing Builder */
  public static com.sivaji.entity.Employee_Record.Builder newBuilder(com.sivaji.entity.Employee_Record.Builder other) {
    return new com.sivaji.entity.Employee_Record.Builder(other);
  }
  
  /** Creates a new Employee_Record RecordBuilder by copying an existing Employee_Record instance */
  public static com.sivaji.entity.Employee_Record.Builder newBuilder(com.sivaji.entity.Employee_Record other) {
    return new com.sivaji.entity.Employee_Record.Builder(other);
  }
  
  /**
   * RecordBuilder for Employee_Record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Employee_Record>
    implements org.apache.avro.data.RecordBuilder<Employee_Record> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence joining_date;
    private java.lang.CharSequence role;
    private java.lang.CharSequence dept;
    private float salary;

    /** Creates a new Builder */
    private Builder() {
      super(com.sivaji.entity.Employee_Record.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.sivaji.entity.Employee_Record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.joining_date)) {
        this.joining_date = data().deepCopy(fields()[1].schema(), other.joining_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.role)) {
        this.role = data().deepCopy(fields()[2].schema(), other.role);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dept)) {
        this.dept = data().deepCopy(fields()[3].schema(), other.dept);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.salary)) {
        this.salary = data().deepCopy(fields()[4].schema(), other.salary);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Employee_Record instance */
    private Builder(com.sivaji.entity.Employee_Record other) {
            super(com.sivaji.entity.Employee_Record.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.joining_date)) {
        this.joining_date = data().deepCopy(fields()[1].schema(), other.joining_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.role)) {
        this.role = data().deepCopy(fields()[2].schema(), other.role);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dept)) {
        this.dept = data().deepCopy(fields()[3].schema(), other.dept);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.salary)) {
        this.salary = data().deepCopy(fields()[4].schema(), other.salary);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.sivaji.entity.Employee_Record.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.sivaji.entity.Employee_Record.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'joining_date' field */
    public java.lang.CharSequence getJoiningDate() {
      return joining_date;
    }
    
    /** Sets the value of the 'joining_date' field */
    public com.sivaji.entity.Employee_Record.Builder setJoiningDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.joining_date = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'joining_date' field has been set */
    public boolean hasJoiningDate() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'joining_date' field */
    public com.sivaji.entity.Employee_Record.Builder clearJoiningDate() {
      joining_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'role' field */
    public java.lang.CharSequence getRole() {
      return role;
    }
    
    /** Sets the value of the 'role' field */
    public com.sivaji.entity.Employee_Record.Builder setRole(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.role = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'role' field has been set */
    public boolean hasRole() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'role' field */
    public com.sivaji.entity.Employee_Record.Builder clearRole() {
      role = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'dept' field */
    public java.lang.CharSequence getDept() {
      return dept;
    }
    
    /** Sets the value of the 'dept' field */
    public com.sivaji.entity.Employee_Record.Builder setDept(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.dept = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'dept' field has been set */
    public boolean hasDept() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'dept' field */
    public com.sivaji.entity.Employee_Record.Builder clearDept() {
      dept = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'salary' field */
    public java.lang.Float getSalary() {
      return salary;
    }
    
    /** Sets the value of the 'salary' field */
    public com.sivaji.entity.Employee_Record.Builder setSalary(float value) {
      validate(fields()[4], value);
      this.salary = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'salary' field has been set */
    public boolean hasSalary() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'salary' field */
    public com.sivaji.entity.Employee_Record.Builder clearSalary() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Employee_Record build() {
      try {
        Employee_Record record = new Employee_Record();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.joining_date = fieldSetFlags()[1] ? this.joining_date : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.role = fieldSetFlags()[2] ? this.role : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.dept = fieldSetFlags()[3] ? this.dept : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.salary = fieldSetFlags()[4] ? this.salary : (java.lang.Float) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
